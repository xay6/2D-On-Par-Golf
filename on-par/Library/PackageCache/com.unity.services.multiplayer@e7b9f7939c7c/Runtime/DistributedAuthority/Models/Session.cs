//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.DistributedAuthority.Http;



namespace Unity.Services.DistributedAuthority.Models
{
    /// <summary>
    /// Session model
    /// </summary>
    [Preserve]
    [DataContract(Name = "Session")]
    internal class Session
    {
        /// <summary>
        /// Creates an instance of Session.
        /// </summary>
        /// <param name="lobbyId">lobbyId param</param>
        /// <param name="region">region param</param>
        [Preserve]
        public Session(string lobbyId, string region = default)
        {
            LobbyId = lobbyId;
            Region = region;
        }

        /// <summary>
        /// Parameter lobbyId of Session
        /// </summary>
        [Preserve]
        [DataMember(Name = "lobbyId", IsRequired = true, EmitDefaultValue = true)]
        public string LobbyId{ get; }

        /// <summary>
        /// Parameter region of Session
        /// </summary>
        [Preserve]
        [DataMember(Name = "region", EmitDefaultValue = false)]
        public string Region{ get; }

        /// <summary>
        /// Formats a Session into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (LobbyId != null)
            {
                serializedModel += "lobbyId," + LobbyId + ",";
            }
            if (Region != null)
            {
                serializedModel += "region," + Region;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a Session as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (LobbyId != null)
            {
                var lobbyIdStringValue = LobbyId.ToString();
                dictionary.Add("lobbyId", lobbyIdStringValue);
            }

            if (Region != null)
            {
                var regionStringValue = Region.ToString();
                dictionary.Add("region", regionStringValue);
            }

            return dictionary;
        }
    }
}
