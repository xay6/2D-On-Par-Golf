//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Matchmaker.Http;



namespace Unity.Services.Matchmaker.Models
{
    /// <summary>
    /// Team model
    /// </summary>
    [Preserve]
    [DataContract(Name = "Team")]
    public class Team
    {
        /// <summary>
        /// Creates an instance of Team.
        /// </summary>
        /// <param name="teamName">The name of the team. The team name should be the same as the team name defined in the rules of matchmaking.</param>
        /// <param name="teamId">The ID of the team.</param>
        /// <param name="playerIds">An array of player IDs that represent the players in a team. This ID must exist in the list of players of the Match Properties.</param>
        [Preserve]
        public Team(string teamName = default, string teamId = default, List<string> playerIds = default)
        {
            TeamName = teamName;
            TeamId = teamId;
            PlayerIds = playerIds;
        }

        /// <summary>
        /// The name of the team. The team name should be the same as the team name defined in the rules of matchmaking.
        /// </summary>
        [Preserve]
        [DataMember(Name = "teamName", EmitDefaultValue = false)]
        public string TeamName{ get; }

        /// <summary>
        /// The ID of the team.
        /// </summary>
        [Preserve]
        [DataMember(Name = "teamId", EmitDefaultValue = false)]
        public string TeamId{ get; }

        /// <summary>
        /// An array of player IDs that represent the players in a team. This ID must exist in the list of players of the Match Properties.
        /// </summary>
        [Preserve]
        [DataMember(Name = "playerIds", EmitDefaultValue = false)]
        public List<string> PlayerIds{ get; }

        /// <summary>
        /// Formats a Team into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (TeamName != null)
            {
                serializedModel += "teamName," + TeamName + ",";
            }
            if (TeamId != null)
            {
                serializedModel += "teamId," + TeamId + ",";
            }
            if (PlayerIds != null)
            {
                serializedModel += "playerIds," + PlayerIds.ToString();
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a Team as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (TeamName != null)
            {
                var teamNameStringValue = TeamName.ToString();
                dictionary.Add("teamName", teamNameStringValue);
            }

            if (TeamId != null)
            {
                var teamIdStringValue = TeamId.ToString();
                dictionary.Add("teamId", teamIdStringValue);
            }

            if (PlayerIds != null)
            {
                var playerIdsStringValue = PlayerIds.ToString();
                dictionary.Add("playerIds", playerIdsStringValue);
            }

            return dictionary;
        }
    }
}
