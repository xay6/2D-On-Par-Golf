//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Multiplay.Authoring.Editor.AdminApis.Fleets.Http;

//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


namespace Unity.Services.Multiplay.Authoring.Editor.AdminApis.Fleets.Models
{
    /// <summary>
    /// MultiplayFleetSwitchState enum.
    /// </summary>
    /// <value>The state of the switch of the active build configuration for a fleet:   * `PENDING` - The build configuration switch has been queue and is waiting to start.   * `PROCESSING` - The build configuration switch has been started and is in progress.   * `COMPLETE` - The build configuration switch is completed.   * `NOT_REQUESTED` - No build configuration switch has been requested for this fleet. </value>
    
    [Preserve]
    [JsonConverter(typeof(StringEnumConverter))]
    internal enum MultiplayFleetSwitchState
    {
        /// <summary>
        /// Enum PENDING for value: PENDING
        /// </summary>
        [EnumMember(Value = "PENDING")]
        PENDING = 1,

        /// <summary>
        /// Enum PROCESSING for value: PROCESSING
        /// </summary>
        [EnumMember(Value = "PROCESSING")]
        PROCESSING = 2,

        /// <summary>
        /// Enum COMPLETE for value: COMPLETE
        /// </summary>
        [EnumMember(Value = "COMPLETE")]
        COMPLETE = 3,

        /// <summary>
        /// Enum NOTREQUESTED for value: NOT_REQUESTED
        /// </summary>
        [EnumMember(Value = "NOT_REQUESTED")]
        NOTREQUESTED = 4

    }
}



