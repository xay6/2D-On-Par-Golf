//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Multiplay.Authoring.Editor.AdminApis.Fleets.Http;



namespace Unity.Services.Multiplay.Authoring.Editor.AdminApis.Fleets.Models
{
    /// <summary>
    /// Series of CCU stats analytics for the given fleet or project.
    /// </summary>
    [Preserve]
    [DataContract(Name = "CCU_Stats_Analytics_Series")]
    internal class CCUStatsAnalyticsSeries
    {
        /// <summary>
        /// Series of CCU stats analytics for the given fleet or project.
        /// </summary>
        /// <param name="peakCCU">Peak CCU value over the time period</param>
        /// <param name="liveCCU">Live CCU value</param>
        /// <param name="prevPeakCCU">Previous peak CCU over the time period</param>
        /// <param name="prevLiveCCU">Previous live CCU value</param>
        [Preserve]
        public CCUStatsAnalyticsSeries(long peakCCU, long liveCCU, long prevPeakCCU, long prevLiveCCU)
        {
            PeakCCU = peakCCU;
            LiveCCU = liveCCU;
            PrevPeakCCU = prevPeakCCU;
            PrevLiveCCU = prevLiveCCU;
        }

        /// <summary>
        /// Peak CCU value over the time period
        /// </summary>
        [Preserve]
        [DataMember(Name = "peakCCU", IsRequired = true, EmitDefaultValue = true)]
        public long PeakCCU{ get; }

        /// <summary>
        /// Live CCU value
        /// </summary>
        [Preserve]
        [DataMember(Name = "liveCCU", IsRequired = true, EmitDefaultValue = true)]
        public long LiveCCU{ get; }

        /// <summary>
        /// Previous peak CCU over the time period
        /// </summary>
        [Preserve]
        [DataMember(Name = "prevPeakCCU", IsRequired = true, EmitDefaultValue = true)]
        public long PrevPeakCCU{ get; }

        /// <summary>
        /// Previous live CCU value
        /// </summary>
        [Preserve]
        [DataMember(Name = "prevLiveCCU", IsRequired = true, EmitDefaultValue = true)]
        public long PrevLiveCCU{ get; }

        /// <summary>
        /// Formats a CCUStatsAnalyticsSeries into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            serializedModel += "peakCCU," + PeakCCU.ToString() + ",";
            serializedModel += "liveCCU," + LiveCCU.ToString() + ",";
            serializedModel += "prevPeakCCU," + PrevPeakCCU.ToString() + ",";
            serializedModel += "prevLiveCCU," + PrevLiveCCU.ToString();
            return serializedModel;
        }

        /// <summary>
        /// Returns a CCUStatsAnalyticsSeries as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            var peakCCUStringValue = PeakCCU.ToString();
            dictionary.Add("peakCCU", peakCCUStringValue);

            var liveCCUStringValue = LiveCCU.ToString();
            dictionary.Add("liveCCU", liveCCUStringValue);

            var prevPeakCCUStringValue = PrevPeakCCU.ToString();
            dictionary.Add("prevPeakCCU", prevPeakCCUStringValue);

            var prevLiveCCUStringValue = PrevLiveCCU.ToString();
            dictionary.Add("prevLiveCCU", prevLiveCCUStringValue);

            return dictionary;
        }
    }
}
