//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Multiplay.Authoring.Editor.AdminApis.Fleets.Http;



namespace Unity.Services.Multiplay.Authoring.Editor.AdminApis.Fleets.Models
{
    /// <summary>
    /// Server counts by server status.
    /// </summary>
    [Preserve]
    [DataContract(Name = "Server_Status")]
    internal class ServerStatus
    {
        /// <summary>
        /// Server counts by server status.
        /// </summary>
        /// <param name="available">Count of available servers.</param>
        /// <param name="online">Count of online servers.</param>
        /// <param name="allocated">Count of allocated servers.</param>
        [Preserve]
        public ServerStatus(int available, int online, int allocated)
        {
            Available = available;
            Online = online;
            Allocated = allocated;
        }

        /// <summary>
        /// Count of available servers.
        /// </summary>
        [Preserve]
        [DataMember(Name = "available", IsRequired = true, EmitDefaultValue = true)]
        public int Available{ get; }
        
        /// <summary>
        /// Count of online servers.
        /// </summary>
        [Preserve]
        [DataMember(Name = "online", IsRequired = true, EmitDefaultValue = true)]
        public int Online{ get; }
        
        /// <summary>
        /// Count of allocated servers.
        /// </summary>
        [Preserve]
        [DataMember(Name = "allocated", IsRequired = true, EmitDefaultValue = true)]
        public int Allocated{ get; }
    
        /// <summary>
        /// Formats a ServerStatus into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            serializedModel += "available," + Available.ToString() + ",";
            serializedModel += "online," + Online.ToString() + ",";
            serializedModel += "allocated," + Allocated.ToString();
            return serializedModel;
        }

        /// <summary>
        /// Returns a ServerStatus as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            var availableStringValue = Available.ToString();
            dictionary.Add("available", availableStringValue);
            
            var onlineStringValue = Online.ToString();
            dictionary.Add("online", onlineStringValue);
            
            var allocatedStringValue = Allocated.ToString();
            dictionary.Add("allocated", allocatedStringValue);
            
            return dictionary;
        }
    }
}
