//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Multiplay.Authoring.Editor.AdminApis.Fleets.Http;

//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


namespace Unity.Services.Multiplay.Authoring.Editor.AdminApis.Fleets.Models
{
    /// <summary>
    /// MultiplayAllocationType enum.
    /// </summary>
    /// <value>The type of allocation method used by the fleet:   * `ALLOCATION` - The fleet accepts requests following the allocations-based model.   * `RESERVATION` - The fleet accepts requests following the reservations-based model. (Closed Beta) </value>
    
    [Preserve]
    [JsonConverter(typeof(StringEnumConverter))]
    internal enum MultiplayAllocationType
    {
        /// <summary>
        /// Enum ALLOCATION for value: ALLOCATION
        /// </summary>
        [EnumMember(Value = "ALLOCATION")]
        ALLOCATION = 1,

        /// <summary>
        /// Enum RESERVATION for value: RESERVATION
        /// </summary>
        [EnumMember(Value = "RESERVATION")]
        RESERVATION = 2

    }
}



