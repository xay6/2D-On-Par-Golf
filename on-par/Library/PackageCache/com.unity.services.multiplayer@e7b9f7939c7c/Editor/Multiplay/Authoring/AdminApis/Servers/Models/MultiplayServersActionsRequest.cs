//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Multiplay.Authoring.Editor.AdminApis.Servers.Http;



namespace Unity.Services.Multiplay.Authoring.Editor.AdminApis.Servers.Models
{
    /// <summary>
    /// A request to trigger a action.
    /// </summary>
    [Preserve]
    [DataContract(Name = "multiplay.servers.actionsRequest")]
    internal class MultiplayServersActionsRequest
    {
        /// <summary>
        /// A request to trigger a action.
        /// </summary>
        /// <param name="action">Action to trigger for the server.</param>
        [Preserve]
        public MultiplayServersActionsRequest(ActionOptions action)
        {
            Action = action;
        }

        /// <summary>
        /// Action to trigger for the server.
        /// </summary>
        [Preserve]
        [JsonConverter(typeof(StringEnumConverter))]
        [DataMember(Name = "action", IsRequired = true, EmitDefaultValue = true)]
        public ActionOptions Action{ get; }

        /// <summary>
        /// Action to trigger for the server.
        /// </summary>
        /// <value>Action to trigger for the server.</value>
        [Preserve]
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ActionOptions
        {
            /// <summary>
            /// Enum ADD for value: ADD
            /// </summary>
            [EnumMember(Value = "ADD")]
            ADD = 1,
            /// <summary>
            /// Enum DELETE for value: DELETE
            /// </summary>
            [EnumMember(Value = "DELETE")]
            DELETE = 2,
            /// <summary>
            /// Enum RESTART for value: RESTART
            /// </summary>
            [EnumMember(Value = "RESTART")]
            RESTART = 3,
            /// <summary>
            /// Enum SHUTDOWN for value: SHUTDOWN
            /// </summary>
            [EnumMember(Value = "SHUTDOWN")]
            SHUTDOWN = 4,
            /// <summary>
            /// Enum START for value: START
            /// </summary>
            [EnumMember(Value = "START")]
            START = 5,
            /// <summary>
            /// Enum STOP for value: STOP
            /// </summary>
            [EnumMember(Value = "STOP")]
            STOP = 6
        }

        /// <summary>
        /// Formats a MultiplayServersActionsRequest into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            serializedModel += "action," + Action;
            return serializedModel;
        }

        /// <summary>
        /// Returns a MultiplayServersActionsRequest as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            var actionStringValue = Action.ToString();
            dictionary.Add("action", actionStringValue);

            return dictionary;
        }
    }
}
