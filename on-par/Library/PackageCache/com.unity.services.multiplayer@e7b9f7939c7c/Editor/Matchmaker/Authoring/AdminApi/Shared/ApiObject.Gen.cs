
//-----------------------------------------------------------------------------
// <auto-generated>
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------

using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using UnityEngine.Scripting;

namespace Unity.Services.Multiplayer.Editor.Matchmaker.Authoring.AdminApi.Shared
{
    /// <summary>
    /// Class for encapsulating generic json types as a JToken.
    /// </summary>
    [JsonConverter(typeof(ApiObjectConverter))]
    class ApiObject
    {
        internal JToken Token { get; }

        /// <summary>
        /// Create an instance of an api object
        /// </summary>
        /// <param name="obj">the source object</param>
        [Preserve]
        public ApiObject(object obj)
        {
            Token = JToken.FromObject(obj);
        }

        [Preserve]
        internal ApiObject(JToken token)
        {
            Token = token;
        }

        /// <summary>
        /// Returns the Jtoken as a string.
        /// </summary>
        /// <param name="formatting">The formatting option. Defaults to none.</param>
        /// <returns>The token value as a string.</returns>
        public string GetAsString(Formatting formatting = Formatting.None)
        {
            return Token.ToString(formatting);
        }

        /// <summary>
        /// Deserialize the token to the specified type.
        /// </summary>
        /// <typeparam name="T">The type to cast internal object to.</typeparam>
        /// <param name="settings">Serializer settings, uses defaults if null</param>
        /// <returns>The deserialized object.</returns>
        public T GetAs<T>(JsonSerializerSettings settings = null)
        {
            return JsonConvert.DeserializeObject<T>(GetAsString(), settings);
        }
    }
}
